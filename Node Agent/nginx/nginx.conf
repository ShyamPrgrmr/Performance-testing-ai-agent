events {}

http {
    resolver 127.0.0.11 valid=10s;  # Docker's internal DNS resolver

    server {
        listen 80;

        location /socat {
            proxy_pass http://socat:2376;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_next_upstream error timeout http_502 http_503 http_504;
        }

        location /prometheus {
            rewrite ^/prometheus(/.*)?$ $1 break;  # Remove /prometheus from the request
            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_next_upstream error timeout http_502 http_503 http_504;
        }

        location /jmeter {
            set $jmeter_upstream "jmeter:8080";
            proxy_pass http://$jmeter_upstream;  # Uses a variable to prevent startup failure
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
            proxy_next_upstream error timeout http_502 http_503 http_504;
        }

        location / {
            return 502 "Service unavailable\n";
        }
    }
}
